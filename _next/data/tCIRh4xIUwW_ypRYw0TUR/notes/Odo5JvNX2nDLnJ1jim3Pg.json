{"pageProps":{"note":{"id":"Odo5JvNX2nDLnJ1jim3Pg","title":"Windows","desc":"","updated":1644525773328,"created":1641739377033,"custom":{},"fname":"environments.windows","type":"note","vault":{"fsPath":"vault"},"contentHash":"1c03f4aeaba886c44bede8c46190bc6f","links":[],"anchors":{"prerequisites":{"type":"header","text":"Prerequisites","value":"prerequisites","line":8,"column":0,"depth":2},"openssh-server":{"type":"header","text":"Openssh server","value":"openssh-server","line":25,"column":0,"depth":2},"keyboard-rate":{"type":"header","text":"Keyboard rate","value":"keyboard-rate","line":55,"column":0,"depth":2},"taskbar-hover-time":{"type":"header","text":"Taskbar Hover time","value":"taskbar-hover-time","line":82,"column":0,"depth":2},"wsl":{"type":"header","text":"WSL","value":"wsl","line":88,"column":0,"depth":2},"fonts":{"type":"header","text":"Fonts","value":"fonts","line":95,"column":0,"depth":2},"clipboard":{"type":"header","text":"Clipboard","value":"clipboard","line":105,"column":0,"depth":2}},"children":[],"parent":"oDOFbJOt5YYRU9MzWaQT0","data":{}},"body":"<h1 id=\"windows\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#windows\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Windows</h1>\n<h2 id=\"prerequisites\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#prerequisites\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Prerequisites</h2>\n<p>Install <a href=\"https://scoop.sh\">scoop</a></p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">iwr</span> <span class=\"token operator\">-</span>useb get<span class=\"token punctuation\">.</span>scoop<span class=\"token punctuation\">.</span>sh <span class=\"token punctuation\">|</span> <span class=\"token function\">iex</span>\n</code></pre>\n<p>Install gsudo</p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\">scoop install gsudo\n</code></pre>\n<p>Update Powershell Help</p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Update-Help</span>\n</code></pre>\n<h2 id=\"openssh-server\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#openssh-server\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Openssh server</h2>\n<p>First install the OpenSSH server </p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\">gsudo <span class=\"token string\">\"Get-WindowsCapability -Online | Where-Object Name -like 'OpenSSH.Server'\"</span>\ngsudo <span class=\"token function\">Add-WindowsCapability</span> <span class=\"token operator\">-</span>Online <span class=\"token operator\">-</span>Name OpenSSH<span class=\"token punctuation\">.</span>Server~~~~0<span class=\"token punctuation\">.</span>0<span class=\"token punctuation\">.</span>1<span class=\"token punctuation\">.</span>0\ngsudo <span class=\"token function\">Start-Service</span> sshd\ngsudo <span class=\"token function\">Set-Service</span> <span class=\"token operator\">-</span>Name sshd <span class=\"token operator\">-</span>StartupType <span class=\"token string\">'Automatic'</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token function\">Get-NetFirewallRule</span> <span class=\"token operator\">-</span>Name <span class=\"token string\">\"OpenSSH-Server-In-TCP\"</span> <span class=\"token operator\">-</span>ErrorAction SilentlyContinue <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> Name<span class=\"token punctuation\">,</span> Enabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Write-Output</span> <span class=\"token string\">\"Firewall Rule 'OpenSSH-Server-In-TCP' does not exist, creating it...\"</span>\n    <span class=\"token function\">New-NetFirewallRule</span> <span class=\"token operator\">-</span>Name <span class=\"token string\">'OpenSSH-Server-In-TCP'</span> <span class=\"token operator\">-</span>DisplayName <span class=\"token string\">'OpenSSH Server (sshd)'</span> <span class=\"token operator\">-</span>Enabled True <span class=\"token operator\">-</span>Direction Inbound <span class=\"token operator\">-</span>Protocol TCP <span class=\"token operator\">-</span>Action Allow <span class=\"token operator\">-</span>LocalPort 22\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Write-Output</span> <span class=\"token string\">\"Firewall rule 'OpenSSH-Server-In-TCP' has been created and exists.\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Then configure keys</p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Get-Content</span> <span class=\"token punctuation\">.</span>\\<span class=\"token punctuation\">.</span>ssh\\id_rsa<span class=\"token punctuation\">.</span>pub <span class=\"token punctuation\">|</span> <span class=\"token function\">Out-File</span> <span class=\"token operator\">-</span>Append <span class=\"token punctuation\">.</span>\\<span class=\"token punctuation\">.</span>ssh\\authorized_keys\n<span class=\"token function\">New-Item</span> C:\\ProgramData\\ssh\\ <span class=\"token operator\">-</span>ItemType Directory\ngsudo <span class=\"token string\">\"Get-Content .\\.ssh\\id_rsa.pub | Out-File -Append C:\\ProgramData\\ssh\\administrators_authorized_keys\"</span>\ngsudo <span class=\"token string\">\"icacls.exe 'C:\\ProgramData\\ssh\\administrators_authorized_keys' /inheritance:r /grant 'Administrators:F' /grant 'SYSTEM:F'\"</span>\n</code></pre>\n<p>Change the default shell</p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\">gsudo <span class=\"token function\">New-ItemProperty</span> <span class=\"token operator\">-</span>Path <span class=\"token string\">\"HKLM:\\SOFTWARE\\OpenSSH\"</span> <span class=\"token operator\">-</span>Name DefaultShell <span class=\"token operator\">-</span>Value <span class=\"token string\">\"C:\\Program Files\\powershell\\7\\pwsh.exe\"</span> <span class=\"token operator\">-</span>PropertyType String <span class=\"token operator\">-</span>Force\n</code></pre>\n<h2 id=\"keyboard-rate\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#keyboard-rate\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Keyboard rate</h2>\n<p>To set my preferred keyboard rate, either execute the following <code>.reg</code> file :</p>\n<pre class=\"language-reg\"><code class=\"language-reg\">Windows Registry Editor Version 5.00\n\n[HKEY_CURRENT_USER\\Control Panel\\Accessibility\\Keyboard Response]\n\"AutoRepeatDelay\"=\"200\"\n\"AutoRepeatRate\"=\"6\"\n\"DelayBeforeAcceptance\"=\"0\"\n\"Flags\"=\"27\"\n\"BounceTime\"=\"0\"\n</code></pre>\n<p>Or execute these commands in a powershell :</p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Set-ItemProperty</span> <span class=\"token operator\">-</span>path <span class=\"token string\">'HKCU:\\Control Panel\\Accessibility\\Keyboard Response'</span> <span class=\"token operator\">-</span>Name <span class=\"token string\">\"AutoRepeatDelay\"</span> <span class=\"token operator\">-</span>Value <span class=\"token string\">\"200\"</span>\n<span class=\"token function\">Set-ItemProperty</span> <span class=\"token operator\">-</span>path <span class=\"token string\">'HKCU:\\Control Panel\\Accessibility\\Keyboard Response'</span> <span class=\"token operator\">-</span>Name <span class=\"token string\">\"AutoRepeatRate\"</span> <span class=\"token operator\">-</span>Value <span class=\"token string\">\"6\"</span>\n<span class=\"token function\">Set-ItemProperty</span> <span class=\"token operator\">-</span>path <span class=\"token string\">'HKCU:\\Control Panel\\Accessibility\\Keyboard Response'</span> <span class=\"token operator\">-</span>Name <span class=\"token string\">\"DelayBeforeAcceptance\"</span> <span class=\"token operator\">-</span>Value <span class=\"token string\">\"0\"</span>\n<span class=\"token function\">Set-ItemProperty</span> <span class=\"token operator\">-</span>path <span class=\"token string\">'HKCU:\\Control Panel\\Accessibility\\Keyboard Response'</span> <span class=\"token operator\">-</span>Name <span class=\"token string\">\"Flags\"</span> <span class=\"token operator\">-</span>Value <span class=\"token string\">\"27\"</span>\n<span class=\"token function\">Set-ItemProperty</span> <span class=\"token operator\">-</span>path <span class=\"token string\">'HKCU:\\Control Panel\\Accessibility\\Keyboard Response'</span> <span class=\"token operator\">-</span>Name <span class=\"token string\">\"BounceTime\"</span> <span class=\"token operator\">-</span>Value <span class=\"token string\">\"0\"</span>\n</code></pre>\n<p>⚠️ Don't forget to logout for the changes to be seen ⚠️</p>\n<h2 id=\"taskbar-hover-time\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#taskbar-hover-time\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Taskbar Hover time</h2>\n<pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Set-ItemProperty</span> <span class=\"token operator\">-</span>path <span class=\"token string\">'HKCU:\\Control Panel\\Mouse'</span> <span class=\"token operator\">-</span>Name <span class=\"token string\">\"MouseHoverTime\"</span> <span class=\"token operator\">-</span>Value 200\n</code></pre>\n<h2 id=\"wsl\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#wsl\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>WSL</h2>\n<p>Install WSL</p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\">wsl <span class=\"token operator\">--</span>install <span class=\"token operator\">-</span>d <span class=\"token string\">\"Ubuntu-20.04\"</span>\n</code></pre>\n<h2 id=\"fonts\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#fonts\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Fonts</h2>\n<p>Install NERD fonts</p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\">git clone <span class=\"token operator\">--</span><span class=\"token keyword\">filter</span>=blob:none <span class=\"token operator\">--</span>sparse git@github<span class=\"token punctuation\">.</span>com:ryanoasis/nerd-fonts\ncd nerd-fonts\ngit sparse-checkout add patched-fonts/CascadiaCode\n<span class=\"token punctuation\">.</span>\\install<span class=\"token punctuation\">.</span>ps1 CascadiaCode\n</code></pre>\n<h2 id=\"clipboard\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#clipboard\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Clipboard</h2>\n<p>Install <a href=\"https://github.com/equalsraf/win32yank/latest/releases/download/win32yank-x64.zip\">win32yank</a></p>\n<p>In WSL </p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -OL https://github.com/equalsraf/win32yank/releases/latest/download/win32yank-x64.zip\n<span class=\"token function\">unzip</span> win32yank-x64.zip win32yank.exe -d ~/.local/bin/\n<span class=\"token function\">chmod</span> +x ~/.local/bin/win32yank.exe\n</code></pre>","noteIndex":{"id":"ACmIaoniWX1pK5upZqwF4","title":"Infrastructure","desc":"","updated":1644158025787,"created":1641149787317,"custom":{"nav_order":0,"permalink":"/"},"fname":"infrastructure","type":"note","vault":{"fsPath":"vault"},"contentHash":"62480da9abef0bc86d140688f95f22c5","links":[],"anchors":{"entrypoint":{"type":"header","text":"Entrypoint","value":"entrypoint","line":10,"column":0,"depth":2},"bootstrap":{"type":"header","text":"Bootstrap","value":"bootstrap","line":18,"column":0,"depth":2},"hardening":{"type":"header","text":"Hardening","value":"hardening","line":27,"column":0,"depth":2}},"children":["8NrarbQZt3SzDSH5WW0o5","8ja66wzpll198gh2i3b0jkc"],"parent":null,"data":{},"body":"\nThis is the root of my infrastructure documentation.\n\n## Entrypoint\n\nTo manage my infrastructure, I have an [Ansible collection](https://github.com/jonsible/iac) that holds several roles and playbooks.\n\nI also have an [inventory repository](https://github.com/jonsible/inventory) which is private, that holds :\n- Bare machines, meaning bare-metal hosts and virtual machines that I pay for\n- VMs, meaning virtual machines that I provisioned in my KVM infrastructure.\n\n## Bootstrap\n\nUsually, the first role to run when creating a new server is the [bootstrap role](https://github.com/jonsible/iac/tree/master/roles/bootstrap).\n\n- It creates the default user (configured by the `default_user` variable)\n- Installs a public key in the user's `authorized_keys` by retrieving it from `github` (configured by the `github_user` variable)\n- Sets up passwordless sudo\n- Installs required components\n\n## Hardening\n\nThe [hardening role](https://github.com/jonsible/iac/tree/master/roles/hardening) will perform multiple steps to secure the server.\n\n- Remove `ufw`\n- Install iptables\n- Install and configure `fail2ban`\n- "},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{}},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"yyyy.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableHandlebarTemplates":false,"enableFullHierarchyNoteTitle":false,"dendronVersion":"0.83.0","templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["infrastructure","git","keyboards","environments","python","projects"],"theme":"dark","enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://docs.bbrain.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Docs","description":"Personal knowledge space"},"github":{"cname":"docs.bbrain.io","enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"infrastructure"}}},"__N_SSG":true}